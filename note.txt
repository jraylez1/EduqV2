 {question.questions[currentQuestionIndex].idType == 1 ? (
                    <>
                        <View style={{ width: '100%', paddingHorizontal: 8 }}>
                            <Text style={{ color: '#081D49', fontSize: 24, lineHeight: 28, fontWeight: '600' }}>
                                {question.questions[currentQuestionIndex].sortIndex + 1}.{' '}
                                {question.questions[currentQuestionIndex].question}
                            </Text>
                        </View>
                        <FlatList
                            data={question.questions[currentQuestionIndex].data}
                            renderItem={({ item, index }) => (
                                <TouchableOpacity
                                    style={{
                                        padding: 12,
                                        borderRadius: 8,
                                        marginTop: 16,
                                        borderWidth: 2,
                                        borderColor: '#ddd',
                                        backgroundColor: item.selected ? '#2dd4bf' : '#fff',
                                        borderColor: item.selected ? '#2dd4bf' : '#081D49',
                                    }}
                                    onPress={() => selectQuestion(index)}
                                >
                                    <Text
                                        style={{
                                            fontStyle: 18,
                                            lineHeight: 28,
                                            fontWeight: '500',
                                            color: item.selected ? '#fff' : '#081D49',
                                        }}
                                    >
                                        {String.fromCharCode(65 + index)}. {item.answer}
                                    </Text>
                                </TouchableOpacity>
                            )}
                            keyExtractor={(item) => item.idAnswer}
                        />
                    </>
                ) : (
                    <View style={{ flex: 1 }}>
                        <View
                            style={{
                                width: '100%',
                                paddingHorizontal: 8,
                                justifyContent: 'center',
                                alignItems: 'center',
                            }}
                        >
                            <Text style={{ fontSize: 24, lineHeight: 28, fontWeight: '600' }}>
                                {question.questions[currentQuestionIndex].question}
                            </Text>
                        </View>
                        <View
                            style={{
                                paddingHorizontal: 32,
                                marginTop: 16,
                                justifyContent: 'center',
                                alignItems: 'center',
                                width: '100%',
                            }}
                        >
                            <Text
                                style={{
                                    textAlign: 'center',
                                    ontSize: 24,
                                    lineHeight: 28,
                                    fontWeight: '600',
                                    color: '#ff0000',
                                    textTransform: 'uppercase',
                                }}
                            >
                                {question.questions[currentQuestionIndex].data.text}
                            </Text>
                            <Text
                                style={{
                                    textAlign: 'center',
                                    fontSize: 18,
                                    lineHeight: 28,
                                    fontWeight: '400',
                                    color: '#198754',
                                }}
                            >
                                {question.questions[currentQuestionIndex].data.ipa}
                            </Text>
                            <View style={{ paddingVertical: 32 }}>
                                {recording ? (
                                    <View style={{ justifyContent: 'center', alignItems: 'center' }}>
                                        <TouchableOpacity
                                            style={{
                                                justifyContent: 'center',
                                                alignItems: 'center',
                                                width: 110,
                                                height: 110,
                                                padding: 16,
                                                backgroundColor: '#9fe0df',
                                                borderRadius: 9999,
                                            }}
                                            onPress={stopRecording}
                                        >
                                            <FontAwesome name="stop" size={60} color="#4da09f" />
                                        </TouchableOpacity>
                                        <Text
                                            style={{
                                                justifyContent: 'center',
                                                fontSize: 18,
                                                lineHeight: 28,
                                                fontWeight: '400',
                                                color: '#dc3545',
                                                marginTop: 16,
                                            }}
                                        >
                                            Recording...
                                        </Text>
                                    </View>
                                ) : (
                                    <TouchableOpacity
                                        style={{
                                            justifyContent: 'center',
                                            alignItems: 'center',
                                            width: 110,
                                            height: 110,
                                            padding: 16,
                                            backgroundColor: '#9fe0df',
                                            borderRadius: 9999,
                                        }}
                                        onPress={startRecording}
                                    >
                                        <FontAwesome name="microphone" size={80} color="#4da09f" />
                                    </TouchableOpacity>
                                )}
                            </View>

                            <Text style={{ alignItems: 'center', fontSize: 16, fontWeight: '500' }}>
                                {t(
                                    'You need to speak no more than 45 seconds. Click the microphone button above to start recording, pause for a moment and then start speaking. Once you have finished your attempt, click the stop button and your audio will be submitted.',
                                )}
                            </Text>
                        </View>
                    </View>
                )}
                <View style={{ flexDirection: 'row', width: '100%', justifyContent: 'center', alignItems: 'center' }}>
                    {currentQuestionIndex > 0 ? (
                        <TouchableOpacity
                            style={{
                                width: '48%',
                                padding: 16,
                                borderRadius: 8,
                                backgroundColor: '#081D49',
                                flexDirection: 'row',
                                justifyContent: 'center',
                                alignItems: 'center',
                            }}
                            onPress={handlePreviousQuestion}
                        >
                            <AntDesign name="left" size={16} color="#fff" />
                            <Text style={{ color: '#fff', fontSize: 16, marginLeft: 8 }}>{t('Previous question')}</Text>
                        </TouchableOpacity>
                    ) : (
                        <View style={{ width: '48%' }}></View>
                    )}
                    {currentQuestionIndex < question.questions.length - 1 ? (
                        <TouchableOpacity
                            style={{
                                width: '48%',
                                padding: 16,
                                borderRadius: 8,
                                backgroundColor: '#081D49',
                                flexDirection: 'row',
                                justifyContent: 'center',
                                alignItems: 'center',
                            }}
                            onPress={handleNextQuestion}
                        >
                            <Text style={{ color: '#fff', fontSize: 16, marginRight: 8 }}>{t('Next question')}</Text>
                            <AntDesign name="right" size={16} color="#fff" />
                        </TouchableOpacity>
                    ) : (
                        <View style={{ width: '48%' }}>
                            <TouchableOpacity
                                style={{
                                    padding: 16,
                                    borderRadius: 8,
                                    backgroundColor: '#5eead4',
                                    flexDirection: 'row',
                                    justifyContent: 'center',
                                    alignItems: 'center',
                                }}
                                onPress={() => setShowModal(true)}
                            >
                                <Text style={{ color: '#fff', fontSize: 16, marginRight: 8 }}>{t('Finish')}</Text>
                            </TouchableOpacity>
                            <NativeBaseProvider>
                                <Center>
                                    <Modal isOpen={showModal} onClose={() => setShowModal(false)}>
                                        <Modal.Content maxWidth="400px">
                                            <Modal.CloseButton />
                                            <Modal.Header>{t('EduQ Notification')}</Modal.Header>
                                            <Modal.Body>
                                                <Text style={{ textAlign: 'justify' }}>
                                                    {t('Do you really want to finish this exercise?')}
                                                </Text>
                                            </Modal.Body>
                                            <Modal.Footer>
                                                <Button.Group space={2}>
                                                    <Button
                                                        variant="ghost"
                                                        colorScheme="blueGray"
                                                        onPress={() => {
                                                            setShowModal(false);
                                                        }}
                                                    >
                                                        {t('Cancel')}
                                                    </Button>
                                                    <Button onPress={() => finishQuestion()}>OK</Button>
                                                </Button.Group>
                                            </Modal.Footer>
                                        </Modal.Content>
                                    </Modal>
                                </Center>
                            </NativeBaseProvider>
                        </View>
                    )}
                </View>